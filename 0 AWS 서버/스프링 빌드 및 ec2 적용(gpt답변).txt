로컬에서 Spring 프로젝트를 빌드하여 JAR 파일을 생성합니다. Maven을 사용하는 경우:

bash
코드 복사
mvn clean package
Gradle을 사용하는 경우:

bash
코드 복사
./gradlew build
생성된 JAR 파일을 EC2 인스턴스로 전송합니다. SCP를 사용할 수 있습니다:

bash
코드 복사
scp -i /path/to/your-key.pem /path/to/your-application.jar ec2-user@your-ec2-instance-public-ip:/path/on/ec2/
5. Spring 애플리케이션 실행
EC2 인스턴스에 SSH로 접속한 후, JAR 파일이 있는 디렉토리로 이동합니다.

다음 명령어로 Spring 애플리케이션을 실행합니다:

bash
코드 복사
java -jar your-application.jar
6. 서비스로 실행 (선택 사항)
애플리케이션을 서비스로 실행하려면 systemd를 사용할 수 있습니다.

서비스 파일 생성:

bash
코드 복사
sudo nano /etc/systemd/system/your-application.service
파일에 다음 내용을 추가합니다:

ini
코드 복사
[Unit]
Description=Your Spring Application
After=network.target

[Service]
User=ec2-user
ExecStart=/usr/bin/java -jar /path/to/your-application.jar
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target
서비스 시작 및 활성화:

bash
코드 복사
sudo systemctl start your-application
sudo systemctl enable your-application
7. 브라우저에서 접속
EC2 인스턴스의 공인 IP 주소 또는 도메인 이름을 사용하여 브라우저에서 애플리케이션에 접속합니다. 예: http://your-ec2-instance-public-ip:8080 (포트 번호는 애플리케이션에 따라 다를 수 있습니다).

요약
EC2 인스턴스를 생성하고 SSH로 접속.
JDK 및 필수 패키지를 설치.
로컬에서 Spring 프로젝트를 빌드하고 JAR 파일을 EC2로 전송.
EC2에서 JAR 파일을 실행하거나 서비스로 설정.
이 과정을 따라 Spring 프로젝트를 EC2에 배포해 보세요. 추가적인 질문이 있으면 언제든지 말씀해 주세요!